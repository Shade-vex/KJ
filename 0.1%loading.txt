--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

local targetCFrame = CFrame.new(-424.44, 20.52, -49040.60)
local targetPos = targetCFrame.Position
local tolerance = 5

repeat task.wait() until LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
local character = LocalPlayer.Character
local hrp = character:FindFirstChild("HumanoidRootPart")
if not hrp then return end

if setsimulationradius then
    setsimulationradius(math.huge, math.huge)
end
pcall(function()
    sethiddenproperty(LocalPlayer, "MaximumSimulationRadius", math.huge)
    sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
end)

local function log(msg)
    print("[MultiTeleport] "..msg)
end

local function isAtTarget()
    if not hrp then return false end
    return (hrp.Position - targetPos).Magnitude <= tolerance
end

local function resetAnchor()
    hrp.Anchored = false
end

local oldTeleport
local teleported = false
local oldTeleportAsync
local teleportedAsync = false
local oldLoadCharacter
local loadCharCalled = false
local NoclipConnection
local oldIndex
local oldGrav
local method16Success = false
local method17Success = false
local method18Success = false
local method19Success = false
local method20Success = false

local function method1()
    resetAnchor()
    hrp.CFrame = targetCFrame
    task.wait(3)
    return isAtTarget()
end

local function method2()
    resetAnchor()
    local bp = Instance.new("BodyPosition")
    bp.Parent = hrp
    bp.MaxForce = Vector3.new(1e6,1e6,1e6)
    bp.P = 20000
    bp.D = 1000
    bp.Position = targetPos
    task.wait(3)
    bp:Destroy()
    return isAtTarget()
end

local function method3()
    resetAnchor()
    hrp.CFrame = targetCFrame
    local anchorPart = Instance.new("Part")
    anchorPart.Size = Vector3.new(5,1,5)
    anchorPart.CFrame = hrp.CFrame * CFrame.new(0,-1,0)
    anchorPart.Anchored = true
    anchorPart.CanCollide = false
    anchorPart.Transparency = 1
    anchorPart.Parent = workspace
    local weld = Instance.new("WeldConstraint")
    weld.Part0 = hrp
    weld.Part1 = anchorPart
    weld.Parent = hrp
    task.wait(3)
    weld:Destroy()
    anchorPart:Destroy()
    return isAtTarget()
end

local function method4()
    resetAnchor()
    hrp.CFrame = targetCFrame
    local hrpPos = hrp.Position
    local closestSeat
    local closestDist = math.huge
    local searchRadius = 50
    for _,seat in ipairs(workspace:GetDescendants()) do
        if seat:IsA("Seat") or seat:IsA("VehicleSeat") then
            local dist = (seat.Position - hrpPos).Magnitude
            if dist < searchRadius and dist < closestDist then
                closestDist = dist
                closestSeat = seat
            end
        end
    end
    if not closestSeat then return false end
    if closestSeat.Occupant then
        local t0 = tick()
        while closestSeat.Occupant and tick()-t0<5 do
            task.wait(0.2)
        end
        if closestSeat.Occupant then return false end
    end
    local hum = character:FindFirstChildOfClass("Humanoid")
    if not hum then return false end
    closestSeat:Sit(hum)
    task.wait(3)
    return isAtTarget()
end

local function method5()
    resetAnchor()
    hrp.CFrame = targetCFrame
    local rifle = workspace:FindFirstChild("RuntimeItems") and workspace.RuntimeItems:FindFirstChild("Bolt Action Rifle")
    if not rifle then return false end
    local bolt = rifle:FindFirstChild("Bolt")
    if not (bolt and bolt:IsA("BasePart")) then return false end
    local att0 = Instance.new("Attachment", hrp)
    local att1 = Instance.new("Attachment", bolt)
    local rope = Instance.new("RopeConstraint")
    rope.Attachment0 = att0
    rope.Attachment1 = att1
    rope.Length = 0.1
    rope.Visible = false
    rope.Parent = hrp
    task.wait(3)
    rope:Destroy()
    att0:Destroy()
    att1:Destroy()
    return isAtTarget()
end

local function method6()
    resetAnchor()
    if not oldTeleport then
        if hookfunction then
            oldTeleport = hookfunction(TeleportService.Teleport,function(...)
                teleported = true
            end)
        else
            return false
        end
    end
    hrp.CFrame = targetCFrame
    task.wait(3)
    return isAtTarget() and (not teleported)
end

local function method7()
    resetAnchor()
    if not oldTeleportAsync then
        if hookfunction then
            oldTeleportAsync = hookfunction(TeleportService.TeleportAsync,function(...)
                teleportedAsync = true
            end)
        else
            return false
        end
    end
    hrp.CFrame = targetCFrame
    task.wait(3)
    return isAtTarget() and (not teleportedAsync)
end

local function method8()
    resetAnchor()
    if not oldLoadCharacter then
        if hookfunction and LocalPlayer.LoadCharacter then
            oldLoadCharacter = hookfunction(LocalPlayer.LoadCharacter,function(...)
                loadCharCalled = true
            end)
        else
            return false
        end
    end
    hrp.CFrame = targetCFrame
    task.wait(3)
    return isAtTarget() and (not loadCharCalled)
end

local function method9()
    resetAnchor()
    local function noclipFunc()
        for _,part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
    NoclipConnection = RunService.Stepped:Connect(noclipFunc)
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e6,1e6,1e6)
    bv.Velocity = (targetPos - hrp.Position).Unit * 100
    bv.Parent = hrp
    local startTime = tick()
    local success = false
    while tick()-startTime<3 do
        bv.Velocity = (targetPos - hrp.Position).Unit * 100
        if isAtTarget() then
            success = true
            break
        end
        task.wait(0.1)
    end
    bv:Destroy()
    if NoclipConnection then
        NoclipConnection:Disconnect()
        NoclipConnection=nil
    end
    for _,part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    return success
end

local function method10()
    resetAnchor()
    local tweenInfo = TweenInfo.new(3,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(hrp,tweenInfo,{CFrame=targetCFrame})
    tween:Play()
    tween.Completed:Wait()
    return isAtTarget()
end

local function method11()
    resetAnchor()
    if character.PivotTo then
        character:PivotTo(targetCFrame)
        task.wait(3)
        return isAtTarget()
    end
    return false
end

local function method12()
    resetAnchor()
    local oldPrimary = character.PrimaryPart
    character.PrimaryPart = hrp
    character:SetPrimaryPartCFrame(targetCFrame)
    character.PrimaryPart = oldPrimary
    task.wait(3)
    return isAtTarget()
end

local function method13()
    resetAnchor()
    if hrp.SetNetworkOwner then
        pcall(function()
            hrp:SetNetworkOwner(LocalPlayer)
        end)
        hrp.CFrame = targetCFrame
        task.wait(3)
        return isAtTarget()
    end
    return false
end

local function method14()
    resetAnchor()
    if not oldIndex and hookmetamethod then
        oldIndex = hookmetamethod(game,"__index",function(obj,key)
            return oldIndex(obj,key)
        end)
    else
        return false
    end
    hrp.CFrame = targetCFrame
    task.wait(3)
    return isAtTarget()
end

local function method15()
    resetAnchor()
    oldGrav = workspace.Gravity
    workspace.Gravity = 0
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e6,1e6,1e6)
    bv.Velocity = (targetPos - hrp.Position).Unit * 50
    bv.Parent = hrp
    local startTime = tick()
    local success = false
    while tick()-startTime<3 do
        bv.Velocity = (targetPos - hrp.Position).Unit * 50
        if isAtTarget() then
            success = true
            break
        end
        task.wait(0.1)
    end
    bv:Destroy()
    workspace.Gravity = oldGrav or 196.2
    return success
end


local methods = {
    {name="M1 (CFrame)",func=method1},
    {name="M2 (BodyPos)",func=method2},
    {name="M3 (WeldAnchor)",func=method3},
    {name="M4 (Seat)",func=method4},
    {name="M5 (RopeRifle)",func=method5},
    {name="M6 (HookTeleport)",func=method6},
    {name="M7 (HookTeleportAsync)",func=method7},
    {name="M8 (HookLoadChar)",func=method8},
    {name="M9 (NoClip+BV)",func=method9},
    {name="M10 (Tween)",func=method10},
    {name="M11 (PivotTo)",func=method11},
    {name="M12 (SetPrimaryPartCFrame)",func=method12},
    {name="M13 (NetOwner)",func=method13},
    {name="M14 (HookIndex)",func=method14},
    {name="M15 (GravityDisable)",func=method15},
}

local results = {}

for _,m in ipairs(methods) do
    local methodName = m.name
    log("Starting "..methodName)
    local success = m.func()
    if success then
        log(methodName.." => SUCCESS")
        results[methodName] = "Success"
    else
        log(methodName.." => FAIL")
        results[methodName] = "Fail"
    end
    log("-----")
end

log("ALL "..#methods.." METHODS TESTED. RESULTS:")
for _,m in ipairs(methods) do
    log(m.name.." => "..(results[m.name] or "???"))
end

print("[MultiTeleport] DONE")
